{"version":3,"file":"react-sizeme.js","sources":["../src/resize-detector.js","../src/with-size.js","../src/component.js","../src/index.js"],"sourcesContent":["import createResizeDetector from 'element-resize-detector'\r\n\r\nconst instances = {}\r\n\r\n// Lazily require to not cause bug\r\n// https://github.com/ctrlplusb/react-sizeme/issues/6\r\nfunction resizeDetector(strategy = 'scroll') {\r\n  /*if (!instances[strategy]) {\r\n    instances[strategy] = createResizeDetector({\r\n      strategy,\r\n    })\r\n  }\r\n\r\n  return instances[strategy]*/\r\n  \r\n  return createResizeDetector({\r\n    strategy,\r\n  })\r\n}\r\n\r\nexport default resizeDetector\r\n","/* eslint-disable react/no-multi-comp */\r\n/* eslint-disable react/require-default-props */\r\n\r\nimport React, { Children, Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ReactDOM from 'react-dom'\r\nimport invariant from 'invariant'\r\nimport throttle from 'lodash.throttle'\r\nimport debounce from 'lodash.debounce'\r\nimport resizeDetector from './resize-detector'\r\n\r\nconst defaultConfig = {\r\n  monitorWidth: true,\r\n  monitorHeight: false,\r\n  monitorPosition: false,\r\n  refreshRate: 16,\r\n  refreshMode: 'throttle',\r\n  noPlaceholder: false,\r\n  resizeDetectorStrategy: 'scroll',\r\n}\r\n\r\nfunction getDisplayName(WrappedComponent) {\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\r\n}\r\n\r\n/**\r\n * This is a utility wrapper component that will allow our higher order\r\n * component to get a ref handle on our wrapped components html.\r\n * @see https://gist.github.com/jimfb/32b587ee6177665fb4cf\r\n */\r\nclass ReferenceWrapper extends Component {\r\n  static displayName = 'SizeMeReferenceWrapper'\r\n\r\n  render() {\r\n    return Children.only(this.props.children)\r\n  }\r\n}\r\nReferenceWrapper.propTypes = { children: PropTypes.element.isRequired }\r\n\r\nfunction Placeholder({ className, style }) {\r\n  // Lets create the props for the temp element.\r\n  const phProps = {}\r\n\r\n  // We will use any provided className/style or else make the temp\r\n  // container take the full available space.\r\n  if (!className && !style) {\r\n    phProps.style = { width: '100%', height: '100%' }\r\n  } else {\r\n    if (className) {\r\n      phProps.className = className\r\n    }\r\n    if (style) {\r\n      phProps.style = style\r\n    }\r\n  }\r\n\r\n  return <div {...phProps} />\r\n}\r\nPlaceholder.displayName = 'SizeMePlaceholder'\r\nPlaceholder.propTypes = {\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n}\r\n\r\n/**\r\n * As we need to maintain a ref on the root node that is rendered within our\r\n * SizeMe component we need to wrap our entire render in a sub component.\r\n * Without this, we lose the DOM ref after the placeholder is removed from\r\n * the render and the actual component is rendered.\r\n * It took me forever to figure this out, so tread extra careful on this one!\r\n */\r\nconst renderWrapper = WrappedComponent => {\r\n  function SizeMeRenderer(props) {\r\n    const {\r\n      explicitRef,\r\n      className,\r\n      style,\r\n      size,\r\n      disablePlaceholder,\r\n      onSize,\r\n      ...restProps\r\n    } = props\r\n\r\n    const noSizeData =\r\n      size == null ||\r\n      (size.width == null && size.height == null && size.position == null)\r\n\r\n    const renderPlaceholder = noSizeData && !disablePlaceholder\r\n\r\n    const renderProps = {\r\n      className,\r\n      style,\r\n    }\r\n\r\n    if (size != null) {\r\n      renderProps.size = size\r\n    }\r\n\r\n    const toRender = renderPlaceholder ? (\r\n      <Placeholder className={className} style={style} />\r\n    ) : (\r\n      <WrappedComponent {...renderProps} {...restProps} />\r\n    )\r\n\r\n    return <ReferenceWrapper ref={explicitRef}>{toRender}</ReferenceWrapper>\r\n  }\r\n\r\n  SizeMeRenderer.displayName = `SizeMeRenderer(${getDisplayName(\r\n    WrappedComponent,\r\n  )})`\r\n\r\n  SizeMeRenderer.propTypes = {\r\n    explicitRef: PropTypes.func.isRequired,\r\n    className: PropTypes.string,\r\n    style: PropTypes.object, // eslint-disable-line react/forbid-prop-types\r\n    size: PropTypes.shape({\r\n      width: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\r\n      height: PropTypes.number, // eslint-disable-line react/no-unused-prop-types\r\n    }),\r\n    disablePlaceholder: PropTypes.bool,\r\n    onSize: PropTypes.func,\r\n  }\r\n\r\n  return SizeMeRenderer\r\n}\r\n\r\n/**\r\n * :: config -> Component -> WrappedComponent\r\n *\r\n * Higher order component that allows the wrapped component to become aware\r\n * of it's size, by receiving it as an object within it's props.\r\n *\r\n * @param  monitorWidth\r\n *   Default true, whether changes in the element's width should be monitored,\r\n *   causing a size property to be broadcast.\r\n * @param  monitorHeight\r\n *   Default false, whether changes in the element's height should be monitored,\r\n *   causing a size property to be broadcast.\r\n *\r\n * @return The wrapped component.\r\n */\r\nfunction withSize(config = defaultConfig) {\r\n  const {\r\n    monitorWidth = defaultConfig.monitorWidth,\r\n    monitorHeight = defaultConfig.monitorHeight,\r\n    monitorPosition = defaultConfig.monitorPosition,\r\n    refreshRate = defaultConfig.refreshRate,\r\n    refreshMode = defaultConfig.refreshMode,\r\n    noPlaceholder = defaultConfig.noPlaceholder,\r\n    resizeDetectorStrategy = defaultConfig.resizeDetectorStrategy,\r\n  } = config\r\n\r\n  invariant(\r\n    monitorWidth || monitorHeight || monitorPosition,\r\n    'You have to monitor at least one of the width, height, or position when using \"sizeMe\"',\r\n  )\r\n\r\n  invariant(\r\n    refreshRate >= 16,\r\n    \"It is highly recommended that you don't put your refreshRate lower than \" +\r\n      '16 as this may cause layout thrashing.',\r\n  )\r\n\r\n  invariant(\r\n    refreshMode === 'throttle' || refreshMode === 'debounce',\r\n    'The refreshMode should have a value of \"throttle\" or \"debounce\"',\r\n  )\r\n\r\n  const refreshDelayStrategy = refreshMode === 'throttle' ? throttle : debounce\r\n\r\n  return function WrapComponent(WrappedComponent) {\r\n    const SizeMeRenderWrapper = renderWrapper(WrappedComponent)\r\n\r\n    class SizeAwareComponent extends React.Component {\r\n      static displayName = `SizeMe(${getDisplayName(WrappedComponent)})`\r\n\r\n      static propTypes = {\r\n        onSize: PropTypes.func,\r\n      }\r\n\r\n      state = {\r\n        width: undefined,\r\n        height: undefined,\r\n        position: undefined,\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.detector = resizeDetector(resizeDetectorStrategy)\r\n        this.determineStrategy(this.props)\r\n        this.handleDOMNode(true)\r\n      }\r\n\r\n      componentDidUpdate() {\r\n        /**\r\n         * Change component will mount to componentDidUpdate\r\n         * Based on https://github.com/reactjs/reactjs.org/issues/721\r\n         */\r\n        this.determineStrategy(this.props)\r\n        this.handleDOMNode()\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        // Change our size checker to a noop just in case we have some\r\n        // late running events.\r\n        this.hasSizeChanged = () => undefined\r\n        this.checkIfSizeChanged = () => undefined\r\n\r\n        if (this.domEl) {\r\n          this.detector.uninstall(this.domEl)\r\n          this.domEl = null\r\n        }\r\n      }\r\n\r\n      determineStrategy = props => {\r\n        if (props.onSize) {\r\n          if (!this.callbackState) {\r\n            this.callbackState = {\r\n              ...this.state,\r\n            }\r\n          }\r\n          this.strategy = 'callback'\r\n        } else {\r\n          this.strategy = 'render'\r\n        }\r\n      }\r\n\r\n      strategisedSetState = state => {\r\n        if (this.strategy === 'callback') {\r\n          this.callbackState = state\r\n          this.props.onSize(state)\r\n        }\r\n        this.setState(state)\r\n      }\r\n\r\n      strategisedGetState = () =>\r\n        this.strategy === 'callback' ? this.callbackState : this.state\r\n\r\n      handleDOMNode(first) {\r\n        const found = this.element && ReactDOM.findDOMNode(this.element)\r\n\r\n        if (!found) {\r\n          // If we previously had a dom node then we need to ensure that\r\n          // we remove any existing listeners to avoid memory leaks.\r\n          if (!first && this.domEl) {\r\n            this.detector.removeAllListeners(this.domEl)\r\n            this.domEl = null\r\n          }\r\n          return\r\n        }\r\n\r\n        if (!first && this.domEl) {\r\n          this.detector.removeAllListeners(this.domEl)\r\n        }\r\n\r\n        this.domEl = found\r\n        this.detector.listenTo(this.domEl, this.checkIfSizeChanged)\r\n      }\r\n\r\n      refCallback = element => {\r\n        this.element = element\r\n      }\r\n\r\n      hasSizeChanged = (current, next) => {\r\n        const c = current\r\n        const n = next\r\n        const cp = c.position || {}\r\n        const np = n.position || {}\r\n\r\n        return (\r\n          (monitorHeight && c.height !== n.height) ||\r\n          (monitorPosition &&\r\n            (cp.top !== np.top ||\r\n              cp.left !== np.left ||\r\n              cp.bottom !== np.bottom ||\r\n              cp.right !== np.right)) ||\r\n          (monitorWidth && c.width !== n.width)\r\n        )\r\n      }\r\n\r\n      checkIfSizeChanged = refreshDelayStrategy(el => {\r\n        const {\r\n          width,\r\n          height,\r\n          right,\r\n          left,\r\n          top,\r\n          bottom,\r\n        } = el.getBoundingClientRect()\r\n\r\n        const next = {\r\n          width: monitorWidth ? width : null,\r\n          height: monitorHeight ? height : null,\r\n          position: monitorPosition ? { right, left, top, bottom } : null,\r\n        }\r\n\r\n        if (this.hasSizeChanged(this.strategisedGetState(), next)) {\r\n          this.strategisedSetState(next)\r\n        }\r\n      }, refreshRate)\r\n\r\n      render() {\r\n        const disablePlaceholder =\r\n          withSize.enableSSRBehaviour ||\r\n          withSize.noPlaceholders ||\r\n          noPlaceholder ||\r\n          this.strategy === 'callback'\r\n\r\n        const size = { ...this.state }\r\n\r\n        return (\r\n          <SizeMeRenderWrapper\r\n            explicitRef={this.refCallback}\r\n            size={this.strategy === 'callback' ? null : size}\r\n            disablePlaceholder={disablePlaceholder}\r\n            {...this.props}\r\n          />\r\n        )\r\n      }\r\n    }\r\n\r\n    SizeAwareComponent.WrappedComponent = WrappedComponent\r\n\r\n    return SizeAwareComponent\r\n  }\r\n}\r\n\r\n/**\r\n * Allow SizeMe to run within SSR environments.  This is a \"global\" behaviour\r\n * flag that should be set within the initialisation phase of your application.\r\n *\r\n * Warning: don't set this flag unless you need to as using it may cause\r\n * extra render cycles to happen within your components depending on the logic\r\n * contained within them around the usage of the `size` data.\r\n *\r\n * DEPRECATED: Please use the global disablePlaceholders\r\n */\r\nwithSize.enableSSRBehaviour = false\r\n\r\n/**\r\n * Global configuration allowing to disable placeholder rendering for all\r\n * sizeMe components.\r\n */\r\nwithSize.noPlaceholders = false\r\n\r\nexport default withSize\r\n","import React, { Component } from 'react'\r\nimport isShallowEqual from 'shallowequal'\r\nimport PropTypes from 'prop-types'\r\nimport withSize from './with-size'\r\n\r\nexport default class SizeMe extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.func,\r\n    render: PropTypes.func,\r\n  }\r\n\r\n  static defaultProps = {\r\n    children: undefined,\r\n    render: undefined,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const { children, render, ...sizeMeConfig } = props\r\n    this.createComponent(sizeMeConfig)\r\n    this.state = {\r\n      size: {\r\n        width: undefined,\r\n        height: undefined,\r\n      },\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      children: prevChildren,\r\n      render: prevRender,\r\n      ...prevSizeMeConfig\r\n    } = this.props\r\n    const {\r\n      children: nextChildren,\r\n      render: nextRender,\r\n      ...nextSizeMeConfig\r\n    } = nextProps\r\n    if (!isShallowEqual(prevSizeMeConfig, nextSizeMeConfig)) {\r\n      this.createComponent(nextSizeMeConfig)\r\n    }\r\n  }\r\n\r\n  createComponent = config => {\r\n    this.SizeAware = withSize(config)(({ children }) => children)\r\n  }\r\n  \r\n  onSize = size => this.setState({ size });\r\n\r\n  render() {\r\n    const { SizeAware } = this\r\n    const render = this.props.children || this.props.render\r\n    return (\r\n      <SizeAware onSize={this.onSize}>\r\n        {render({ size: this.state.size })}\r\n      </SizeAware>\r\n    )\r\n  }\r\n}\r\n","import withSize from './with-size'\r\nimport SizeMe from './component'\r\n\r\nwithSize.SizeMe = SizeMe\r\nwithSize.withSize = withSize\r\n\r\nexport default withSize\r\n"],"names":["resizeDetector","strategy","createResizeDetector","defaultConfig","getDisplayName","WrappedComponent","displayName","name","ReferenceWrapper","Children","only","props","children","Component","propTypes","PropTypes","element","isRequired","Placeholder","className","style","phProps","width","height","React","string","object","renderWrapper","SizeMeRenderer","explicitRef","size","disablePlaceholder","onSize","restProps","noSizeData","position","renderPlaceholder","renderProps","toRender","func","shape","number","bool","withSize","config","monitorWidth","monitorHeight","monitorPosition","refreshRate","refreshMode","noPlaceholder","resizeDetectorStrategy","refreshDelayStrategy","throttle","debounce","WrapComponent","SizeMeRenderWrapper","SizeAwareComponent","state","undefined","determineStrategy","callbackState","strategisedSetState","setState","strategisedGetState","refCallback","hasSizeChanged","current","next","c","n","cp","np","top","left","bottom","right","checkIfSizeChanged","el","getBoundingClientRect","detector","handleDOMNode","domEl","uninstall","first","found","ReactDOM","findDOMNode","removeAllListeners","listenTo","enableSSRBehaviour","noPlaceholders","SizeMe","render","sizeMeConfig","createComponent","nextProps","prevChildren","prevRender","prevSizeMeConfig","nextChildren","nextRender","nextSizeMeConfig","isShallowEqual","SizeAware","defaultProps"],"mappings":"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"}